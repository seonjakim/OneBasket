{"version":3,"sources":["pages/admin/Admin.tsx"],"names":["TableContent","content","_id","type","name","address","duration","gender","plan","reason","birthday","RowExpandable","id","accessibilityExpandLabel","accessibilityCollapseLabel","expandedContents","Cell","Admin","React","useState","tableData","setTableData","useEffect","fetch","method","then","response","json","data","catch","console","error","tableMenu","map","el","idx","HeaderCell","weight","filteredTableContents","filter","parentTableContents","childTableContents","value","padding","overflow","width","height","Header","Row","Body"],"mappings":"sJAGMA,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACdC,EACND,EADMC,IAAKC,EACXF,EADWE,KAAMC,EACjBH,EADiBG,KAAMC,EACvBJ,EADuBI,QAASC,EAChCL,EADgCK,SAAUC,EAC1CN,EAD0CM,OAAQC,EAClDP,EADkDO,KAAMC,EACxDR,EADwDQ,OAAQC,EAChET,EADgES,SAElE,OACE,eAAC,IAAMC,cAAP,CACEC,GAAG,MACHC,yBAAyB,SACzBC,2BAA2B,WAC3BC,iBACE,gCACE,sCACA,+BAAOP,IACP,wCACA,+BAAOC,IACP,0CACA,+BAAOC,OAXb,UAeE,cAAC,IAAMM,KAAP,UACE,cAAC,IAAD,UAAOd,MAET,cAAC,IAAMc,KAAP,UACE,cAAC,IAAD,UAAOb,MAET,cAAC,IAAMa,KAAP,UACE,cAAC,IAAD,UAAOZ,MAET,cAAC,IAAMY,KAAP,UACE,cAAC,IAAD,UAAOX,MAET,cAAC,IAAMW,KAAP,UACE,cAAC,IAAD,UAAOV,MAET,cAAC,IAAMU,KAAP,UACE,cAAC,IAAD,UAAOT,UAmEAU,UA7DD,WACZ,IAEA,EAAkCC,IAAMC,SAAS,IAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAH,IAAMI,WAAU,WACdC,MAAM,8BAA+B,CAAEC,OAAQ,QAC5CC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLP,EAAaO,MAEdC,MAAMC,QAAQC,SAChB,IACH,IAAMC,EAdO,CAAC,GAAI,KAAM,OAAQ,OAAQ,UAAW,WAAY,UAcxCC,KAAI,SAACC,EAAIC,GAAL,OACzB,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAMC,OAAO,OAAb,SAAqBH,KADAC,MAKnBG,EAAwB,SAACV,EAAMhB,GACnC,OAAOgB,EACJW,QAAO,SAACL,GAAD,OAAQA,EAAG/B,OAASS,KAC3BqB,KAAI,SAACC,EAAIC,GAAL,OAAa,cAACnC,EAAD,CAAwBC,QAASiC,GAAdC,OAEnCK,EAAsBF,EAAsBlB,EAAW,aACvDqB,EAAqBH,EAAsBlB,EAAW,YAE5D,OACE,gCACE,iCACE,uCACA,gDACA,uBAAOjB,KAAK,SACZ,+CACA,uBAAOA,KAAK,SACZ,uBAAOA,KAAK,SAASuC,MAAM,cAE7B,2CACA,cAAC,IAAD,CAAKC,QAAS,EAAGC,SAAS,OAAOC,MAAM,OAAOC,OAAO,OAArD,SACE,eAAC,IAAD,WACE,cAAC,IAAMC,OAAP,UACE,cAAC,IAAMC,IAAP,UAAYhB,MAEd,cAAC,IAAMiB,KAAP,UAAaT,SAGjB,0CACA,cAAC,IAAD,CAAKG,QAAS,EAAGC,SAAS,OAAOC,MAAM,OAAOC,OAAO,OAArD,SACE,eAAC,IAAD,WACE,cAAC,IAAMC,OAAP,UACE,cAAC,IAAMC,IAAP,UAAYhB,MAEd,cAAC,IAAMiB,KAAP,UAAaR","file":"static/js/4.e626d7d5.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Table, Text } from 'gestalt';\n\nconst TableContent = ({ content }) => {\n  const { _id, type, name, address, duration, gender, plan, reason, birthday } =\n    content;\n  return (\n    <Table.RowExpandable\n      id=\"row\"\n      accessibilityExpandLabel=\"Expand\"\n      accessibilityCollapseLabel=\"Collapse\"\n      expandedContents={\n        <div>\n          <h6>Plan</h6>\n          <span>{plan}</span>\n          <h6>Reason</h6>\n          <span>{reason}</span>\n          <h6>Birthday</h6>\n          <span>{birthday}</span>\n        </div>\n      }\n    >\n      <Table.Cell>\n        <Text>{_id}</Text>\n      </Table.Cell>\n      <Table.Cell>\n        <Text>{type}</Text>\n      </Table.Cell>\n      <Table.Cell>\n        <Text>{name}</Text>\n      </Table.Cell>\n      <Table.Cell>\n        <Text>{address}</Text>\n      </Table.Cell>\n      <Table.Cell>\n        <Text>{duration}</Text>\n      </Table.Cell>\n      <Table.Cell>\n        <Text>{gender}</Text>\n      </Table.Cell>\n    </Table.RowExpandable>\n  );\n};\n\nconst Admin = () => {\n  const menu = ['', 'id', 'Type', 'Name', 'Address', 'Duration', 'Gender'];\n\n  const [tableData, setTableData] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch('http://localhost:4000/admin', { method: 'GET' })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setTableData(data);\n      })\n      .catch(console.error);\n  }, []);\n  const tableMenu = menu.map((el, idx) => (\n    <Table.HeaderCell key={idx}>\n      <Text weight=\"bold\">{el}</Text>\n    </Table.HeaderCell>\n  ));\n\n  const filteredTableContents = (data, id) => {\n    return data\n      .filter((el) => el.type === id)\n      .map((el, idx) => <TableContent key={idx} content={el} />);\n  };\n  const parentTableContents = filteredTableContents(tableData, 'GodParent');\n  const childTableContents = filteredTableContents(tableData, 'GodChild');\n\n  return (\n    <div>\n      <form>\n        <h3>Match</h3>\n        <span>GodParent : </span>\n        <input type=\"text\" />\n        <span>GodChild : </span>\n        <input type=\"text\" />\n        <input type=\"submit\" value=\"Update\" />\n      </form>\n      <h3>GodParent</h3>\n      <Box padding={4} overflow=\"auto\" width=\"100%\" height=\"35vh\">\n        <Table>\n          <Table.Header>\n            <Table.Row>{tableMenu}</Table.Row>\n          </Table.Header>\n          <Table.Body>{parentTableContents}</Table.Body>\n        </Table>\n      </Box>\n      <h3>GodChild</h3>\n      <Box padding={4} overflow=\"auto\" width=\"100%\" height=\"35vh\">\n        <Table>\n          <Table.Header>\n            <Table.Row>{tableMenu}</Table.Row>\n          </Table.Header>\n          <Table.Body>{childTableContents}</Table.Body>\n        </Table>\n      </Box>\n    </div>\n  );\n};\n\nexport default Admin;\n"],"sourceRoot":""}